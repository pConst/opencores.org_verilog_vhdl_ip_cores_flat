
arithmetic

0000 dest reg2 reg1 => big_op <= "0000000000001"; -- add
0001" => big_op <= "0000000000010"; -- sub
0010" => big_op <= "0000000000100"; -- and
0011" => big_op <= "0000000001000"; -- or
0100" => big_op <= "0000000010000"; -- xor
0101" => big_op <= "0000000100000"; -- shl
0110" => big_op <= "0000001000000"; -- shr

cccc0000 reg1 reg2

0111rrrriiiiiiii  -- ldi 8 bit




load/store

10x0    dest addr  load 

1010   io load
1011   io store



skip 

110x _offset_


cmp and store result to register 1

10 000 reg2 reg1 => big_op <= "1000000000000"; -- gtu32
   001 => big_op <= "1000000000001"; -- gtu8
   010 => big_op <= "1000000000010"; -- gts32
   011 => big_op <= "1000000000011"; -- gts8
   100 => big_op <= "1000000000100"; -- ltu32
   101 => big_op <= "1000000000101"; -- ltu8
   110 => big_op <= "1000000000110"; -- lts32
   111 => big_op <= "1000000000111"; -- lts8
