<!--# set var="title" value="LCD driver" -->
<!--# include virtual="/ssi/ssi_start.shtml" -->
<b><font color="#BF0000"><font size=+2>Project
Name: LCD Driver</font></font></font></b>
<p><b><font size=+1>Description:</font></b>
<p>LCD Driver that we want to designed is a CMOS LCD driver capable of
driving a multiplexed display of up to 128 segments ( 16 columns by 8 backplanes
). The number of backplanes being driven is programmable from one to eight.
Data to be displayed is sent to the chip serially and stored in an internal
RAM. An external resistor and capasitor control the frequency of the driving
signals to the LCD. The displayed data may also be read serially from the
on-chip RAM.
<p><b><font size=+1>Specifications:</font></b>
<ul>
<li>
Operates on 22-bits (five bits first is address, the next bit is read and
write flags, and 16 bits data )</li>

<li>
Can be programmed to accept oscillator output</li>

<li>
Can be programmed to backplane signals of another LCD Driver for cascading
purposes.</li>

<li>
Can driving a multiplexed display</li>

<li>
For backplane capacitance under 2000 pF LCD driver guarantees an offset
of less than 10 mV.</li>

<li>
Power supply of  VDD is 5 V - 15 V.</li>
</ul>

<center><span style="font-size:12.0pt;font-family:"Times New Roman";
mso-fareast-font-family:"Times New Roman";mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA"><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:392.25pt;
 height:274.5pt' o:ole="">
 <v:imagedata src="file:///C:/WINDOWS/TEMP/msoclip1/01/clip_image001.wmz"
  o:title=""/>
</v:shape><![endif]--><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:431.5pt;
 height:285.5pt' o:ole="">
 <v:imagedata src="file:///C:/WINDOWS/TEMP/msoclip1/01/clip_image001.wmz"
  o:title=""/>
</v:shape><![endif]--><a href="LCD.ht1.gif"><img SRC="LCD.ht1.gif" v:shapes="_x0000_i1025" height=381 width=575></a><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Visio.Drawing.5" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1044360745">
 </o:OLEObject>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:OLEObject Type="Embed" ProgID="Visio.Drawing.4" ShapeID="_x0000_i1025"
  DrawAspect="Content" ObjectID="_1039063543">
 </o:OLEObject>
</xml><![endif]--></span></center>
<br> 
<b><font size=+1>Design Stages:</font></b>
<ul>
<li>
Make core specifications</li>

<li>
Design the behavioral and structural VHDL using Alliance tools</li>

<li>
Implementation to symbolic layout</li>

<li>
Full verifications</li>

<li>
Converting to real layout</li>

<li>
Make full report</li>
</ul>
<b><font size=+1>Current Stage:</font></b>
<ul>
<li>
Make the behavioral and structural VHDL using Alliance tools</li>

<li>
To know a little bit about Alliance, click <a href="alliance.shtml">this</a></li>

<li>
You can download our work documentation (Alliance VHDL code) <a href="lcd.zip">here</a>. </li>
</ul>
<b><font size=+1>Maintainers and Authors :</font></b>
<p>LCD Driver development team
<p>current members: 
<br> 
<br> 
<ul>
<li>
<a href="mailto:Mima@manufel.paume.itb.ac.id">Kharisma Sinung P</a></li>

<li>
<a href="mailto:hendrag01@s.ee.itb.ac.id">Hendra Gunawan</a></li>

<li>
<a href="mailto:iyon@s.ee.itb.ac.id">Nurhadi Wiyono</a></li>

<li>
<a href="mailto:ssarwono@ieee.org">Sarwono Sutikno</a></li>
</ul>
<b><font size=+1>Mailing-list:</font></b>
<ul><a href="mailto:cores@opencores.org_NOSPAM">cores@opencores.org_NOSPAM</a></ul>
<!--# include virtual="/ssi/ssi_end.shtml" -->
