    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--===========================================================================--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--  CF SECTOR READER
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--  - SEPTEMBER 2002
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--  - UPV / EHU.  
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Design units 	: FAT FILE LOADER
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- File name    	: cf_sector_reader.txt
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Purpose      	: READ RAW SECTORS FROM CF
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--                  
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Library      	: -
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Languaje	: ASSEMBLER FOR XILINX PICOBLAZE
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Compiler 	: KCPSM ASSEMBLER V1.25
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Debugger	: PSM DEBUG V1.00
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--===========================================================================--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------------------------------------------------------
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Revision list
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Version   Author                 Date           Changes
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 260902    Armando Astarloa   27 September 2002  -
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 241002    Armando Astarloa   27 October   2002  Reset on error
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 031202    Armando Astarloa   27 December  2002  Load LBA information from data bus
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 120103	  Armando Astarloa   12 January   2003  Quit status check when words reading
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 290103	  Armando Astarloa   29 January   2003  Reset function. Reset after error
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 050503	  Armando Astarloa   02 May	    2003  Allow not all bytes of the sector read.
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--								    do_reset_and_retry state
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 160503	  Armando Astarloa   15	May	    2003  Complete sector reading
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 170603	  Armando Astarloa   17 June	    2003  Bug in words per sector read
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- 230603	  Armando Astarloa   24 June	    2003  Quit soft reset (KCPSM v.1002 has reset)
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--								    
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------------------------------------------------------
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- Description    :  DUMMY CF SECTORS READ
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-------------------------------------------------------------------------------
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- CONSTANT DEFINITIONS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DELAY1
  OP1 VALUE-DELAY1
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 50 MHZ DELAY1 => T(clk_i) => fastloop=DELAY1*T*2= 120ns sF=1 => delay= sF*fastloop
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 50 MHZ DELAY1=03 => T=20NS => fastloop=3*20*2= 120ns sF=1 => delay= 120ns
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IDENTIFY_COMMAND
  OP1 VALUE-IDENTIFY_COMMAND
   OPERAND2-EC
  OP2 VALUE-EC
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-WRITE_SECTOR_COMMAND
  OP1 VALUE-WRITE_SECTOR_COMMAND
   OPERAND2-30
  OP2 VALUE-30
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-READ_SECTOR_COMMAND
  OP1 VALUE-READ_SECTOR_COMMAND
   OPERAND2-20
  OP2 VALUE-20
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-WRITE_SEC_FEATURE
  OP1 VALUE-WRITE_SEC_FEATURE
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SOFT_RESET
  OP1 VALUE-SOFT_RESET
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- RAM REGISTERS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s0 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s1
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s2
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s3 -> WISHBONE CONTROL
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s4 -> REGISTERS STACK
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s5 -> MY_STATUS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;		D3 = ERROR
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;		D2 = DATA TRANSFER ALLOWED (0 NOT / 1 YES)
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;		D1 = COMMAND ALLOWED (NOT BUSY) (0 NOT / 1 YES)
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;		D0 = SECTOR AVAILABLE (0 NOT / 1 YES)
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SECTOR_AVAILABLE
  OP1 VALUE-SECTOR_AVAILABLE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COMMAND_ALLOWED
  OP1 VALUE-COMMAND_ALLOWED
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_TRANSFER_ALLOWED
  OP1 VALUE-DATA_TRANSFER_ALLOWED
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ERROR_MY_STATUS
  OP1 VALUE-ERROR_MY_STATUS
   OPERAND2-08
  OP2 VALUE-08
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s6 -> WORDS_READ
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s7 -> LBA_7_0
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s8 -> LBA_15_8
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s9 -> LBA_23_16
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sA -> LD_LBA_27_24
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sB -> data[7:0] in ide
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sC -> data[15:8] in ide
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sD -> data[7:0] out ide
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sE -> data[15:8] out ide
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; sF -> acummulator
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- OUTPUT PORTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- IDE INTERFACE PORTS - OUTPUTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IDE_OUT_7_0
  OP1 VALUE-DATA_IDE_OUT_7_0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IDE_OUT_15_8
  OP1 VALUE-DATA_IDE_OUT_15_8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IDE_CONTROL_OUT
  OP1 VALUE-IDE_CONTROL_OUT
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D7 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D6 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D5 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D4 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D3 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D2 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D1 = NIOWR
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D0 = NIORD
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NIOWR
  OP1 VALUE-NIOWR
   OPERAND2-FD
  OP2 VALUE-FD
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-NIORD
  OP1 VALUE-NIORD
   OPERAND2-FE
  OP2 VALUE-FE
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IDE_ADDRESS_OUT
  OP1 VALUE-IDE_ADDRESS_OUT
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D7 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D6 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D5 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D4 = NCE1
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D3 = NCE0
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D2 = A2
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D1 = A1
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D0 = A0
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WRITE IDE REGISTERS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;    NCE1/NCE0/ A2/ A1/ A0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-CONTROL
  OP1 VALUE-CONTROL
   OPERAND2-0E
  OP2 VALUE-0E
    COMMENT-; 000   0    1   1   1   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA
  OP1 VALUE-DATA
   OPERAND2-10
  OP2 VALUE-10
    COMMENT-; 000   1    0   0   0   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-FEATURE
  OP1 VALUE-FEATURE
   OPERAND2-11
  OP2 VALUE-11
    COMMENT-; 000   1    0   0   0   1
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-SECTOR_COUNT
  OP1 VALUE-SECTOR_COUNT
   OPERAND2-12
  OP2 VALUE-12
    COMMENT-; 000   1    0   0   1   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LBA_7_0
  OP1 VALUE-LBA_7_0
   OPERAND2-13
  OP2 VALUE-13
    COMMENT-; 000   1    0   0   1   1
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LBA_15_8
  OP1 VALUE-LBA_15_8
   OPERAND2-14
  OP2 VALUE-14
    COMMENT-; 000   1    0   1   0   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LBA_23_16
  OP1 VALUE-LBA_23_16
   OPERAND2-15
  OP2 VALUE-15
    COMMENT-; 000   1    0   1   0   1
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-LD_LBA_27_24
  OP1 VALUE-LD_LBA_27_24
   OPERAND2-16
  OP2 VALUE-16
    COMMENT-; 000   1    0   1   1   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-COMMAND
  OP1 VALUE-COMMAND
   OPERAND2-17
  OP2 VALUE-17
    COMMENT-; 000   1    0   1   1   1
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-CF_OFF
  OP1 VALUE-CF_OFF
   OPERAND2-18
  OP2 VALUE-18
    COMMENT-; 000	1    1	 0   0   0 		
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; READ IDE REGISTERS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;    NCE1/NCE0/ A2/ A1/ A0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-A_STATUS
  OP1 VALUE-A_STATUS
   OPERAND2-0E
  OP2 VALUE-0E
    COMMENT-; 000   0    1   1   1   0
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-STATUS
  OP1 VALUE-STATUS
   OPERAND2-17
  OP2 VALUE-17
    COMMENT-; 000   1    0   1   1   1
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- WISHBONE INTERFACE PORTS - OUTPUTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_WB_OUT_7_0
  OP1 VALUE-DATA_WB_OUT_7_0
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_WB_OUT_15_8
  OP1 VALUE-DATA_WB_OUT_15_8
   OPERAND2-05
  OP2 VALUE-05
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-CONTROL_WB_OUT
  OP1 VALUE-CONTROL_WB_OUT
   OPERAND2-06
  OP2 VALUE-06
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D7 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D6 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D5 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D4 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D3 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D2 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D1 = TAG0_WORD_AVAILABLE
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D0 = ACK_CF_READER
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ACK_CF_READER
  OP1 VALUE-ACK_CF_READER
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-TAG0_WORD_AVAILABLE
  OP1 VALUE-TAG0_WORD_AVAILABLE
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- BUS CONTROL SIGNALS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-CONTROL_OUT
  OP1 VALUE-CONTROL_OUT
   OPERAND2-07
  OP2 VALUE-07
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D7 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D6 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D5 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D4 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D3 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D2 = ERROR
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D1 = WB_BUS_WRITE_ENABLE
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D0 = IDE_BUS_WRITE_ENABLE
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-IDE_BUS_WRITE_ENABLE
  OP1 VALUE-IDE_BUS_WRITE_ENABLE
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-WB_BUS_WRITE_ENABLE
  OP1 VALUE-WB_BUS_WRITE_ENABLE
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-ERROR
  OP1 VALUE-ERROR
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- INPUT PORTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- IDE INTERFACE PORTS - INPUTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IDE_IN_7_0
  OP1 VALUE-DATA_IDE_IN_7_0
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_IDE_IN_15_8
  OP1 VALUE-DATA_IDE_IN_15_8
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- WISHBONE INTERFACE PORTS - INPUTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-CONTROL_WB_IN
  OP1 VALUE-CONTROL_WB_IN
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D7 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D6 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D5 = 
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D4 = WB_A0
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D3 = -
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D2 = W_WE
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D1 = TAG1_WORD_REQUEST
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; D0 = STROBE_CF_READER
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; STROBE_CF_READER = 1 & W_WE=1 & WB_A0 = 0 
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-WRITE_LBA_15_0
  OP1 VALUE-WRITE_LBA_15_0
   OPERAND2-05
  OP2 VALUE-05
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; STROBE_CF_READER = 1 & W_WE=1 & WB_A0 = 1 
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-WRITE_LBA_27_16
  OP1 VALUE-WRITE_LBA_27_16
   OPERAND2-15
  OP2 VALUE-15
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-STROBE_CF_READER_AND_RD
  OP1 VALUE-STROBE_CF_READER_AND_RD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-TAG1_WORD_REQUEST
  OP1 VALUE-TAG1_WORD_REQUEST
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-W_WE
  OP1 VALUE-W_WE
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- WISHBONE INTERFACE PORTS - INPUTS
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_WB_IN_7_0
  OP1 VALUE-DATA_WB_IN_7_0
   OPERAND2-03
  OP2 VALUE-03
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-CONSTANT
   OPERAND1-DATA_WB_IN_15_8
  OP1 VALUE-DATA_WB_IN_15_8
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;-- REGISTERS INITIALIZATION
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;--
    ADDRESS-00
      LABEL-inicialization
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; BUS CONTROL : WRITE NOT ENABLE
    ADDRESS-00
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-00
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-01
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-02
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-02
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WISHBONE BUS INIZIALIZATION
    ADDRESS-02
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-02
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-03
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_WB_OUT_7_0
  OP2 VALUE-04
    COMMENT-
    ADDRESS-04
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_WB_OUT_15_8
  OP2 VALUE-05
    COMMENT-
    ADDRESS-05
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_WB_OUT
  OP2 VALUE-06
    COMMENT-
    ADDRESS-06
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-06
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE BUS INICIALIZATION
    ADDRESS-06
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-06
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-07
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_IDE_OUT_7_0
  OP2 VALUE-00
    COMMENT-
    ADDRESS-08
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_IDE_OUT_15_8
  OP2 VALUE-01
    COMMENT-
    ADDRESS-09
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-18
  OP2 VALUE-18
    COMMENT-
    ADDRESS-0A
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_ADDRESS_OUT
  OP2 VALUE-03
    COMMENT-
    ADDRESS-0B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-0C
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_CONTROL_OUT
  OP2 VALUE-02
    COMMENT-
    ADDRESS-0D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 210NS*31 (RESET DELAY)
    ADDRESS-0D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-0D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-0E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-0F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-10
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-11
      LABEL-
INSTRUCTION-CALL
   OPERAND1-soft_reset
  OP1 VALUE-CB
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-12
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-13
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-14
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-15
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-16
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-17
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-18
      LABEL-main
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CHECK WISHBONE BUS
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; wait state for stb_i deassertion
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LOAD sF,01
    ADDRESS-18
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;CALL wait_loop
    ADDRESS-18
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-19
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-1A
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-1B
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-1C
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-CONTROL_WB_IN
  OP2 VALUE-02
    COMMENT-
    ADDRESS-1D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-1D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CHECK STROBE & READ
    ADDRESS-1D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-1D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s3
  OP2 VALUE-s3
    COMMENT-
    ADDRESS-1E
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-WRITE_LBA_15_0
  OP2 VALUE-05
    COMMENT-
    ADDRESS-1F
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-store_lba_15_0
  OP2 VALUE-2A
    COMMENT-
    ADDRESS-20
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s3
  OP2 VALUE-s3
    COMMENT-
    ADDRESS-21
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-WRITE_LBA_27_16
  OP2 VALUE-15
    COMMENT-
    ADDRESS-22
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-store_lba_27_16
  OP2 VALUE-2F
    COMMENT-
    ADDRESS-23
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s3
  OP2 VALUE-s3
    COMMENT-
    ADDRESS-24
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-STROBE_CF_READER_AND_RD
  OP2 VALUE-01
    COMMENT-
    ADDRESS-25
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-put_data_in_wb_bus
  OP2 VALUE-36
    COMMENT-
    ADDRESS-26
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-26
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IF NOT READ REQUEST MAINTAIN SIGNAL
    ADDRESS-26
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-26
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-27
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-28
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_WB_OUT
  OP2 VALUE-06
    COMMENT-
    ADDRESS-29
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main
  OP1 VALUE-18
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2A
      LABEL-store_lba_15_0
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA_WB_IN_7_0 -> s7 LBA_7_0
    ADDRESS-2A
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s7
  OP1 VALUE-s7
   OPERAND2-DATA_WB_IN_7_0
  OP2 VALUE-03
    COMMENT-
    ADDRESS-2B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA_WB_IN_15_8 -> s8 LBA_15_8
    ADDRESS-2B
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s8
  OP1 VALUE-s8
   OPERAND2-DATA_WB_IN_15_8
  OP2 VALUE-04
    COMMENT-
    ADDRESS-2C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; SECTOR AVAILABLE / COMMAND AVAILABLE -> 0
    ADDRESS-2C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-2D
      LABEL-
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-2E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-wishbone_ack
  OP1 VALUE-3E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2F
      LABEL-store_lba_27_16
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-2F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA_WB_IN_7_0 -> s9 LBA_23_16
    ADDRESS-2F
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-s9
  OP1 VALUE-s9
   OPERAND2-DATA_WB_IN_7_0
  OP2 VALUE-03
    COMMENT-
    ADDRESS-30
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA_WB_IN_15_8 -> s10 LD_LBA_27_24
    ADDRESS-30
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-sA
  OP1 VALUE-sA
   OPERAND2-DATA_WB_IN_15_8
  OP2 VALUE-04
    COMMENT-
    ADDRESS-31
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; SECTOR AVAILABLE -> 0
    ADDRESS-31
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; antes 020503 LOAD sF,FE
    ADDRESS-31
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-32
      LABEL-
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-33
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-wishbone_ack
  OP1 VALUE-3E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-34
      LABEL-do_reset_and_retry
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-34
      LABEL-
INSTRUCTION-CALL
   OPERAND1-soft_reset
  OP1 VALUE-CB
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-35
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-36
      LABEL-put_data_in_wb_bus
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-36
      LABEL-
INSTRUCTION-CALL
   OPERAND1-read_word_from_cf
  OP1 VALUE-96
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-37
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; check for error
    ADDRESS-37
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-38
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-ERROR_MY_STATUS
  OP2 VALUE-08
    COMMENT-
    ADDRESS-39
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-do_reset_and_retry
  OP2 VALUE-34
    COMMENT-
    ADDRESS-3A
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sB
  OP1 VALUE-sB
   OPERAND2-DATA_WB_OUT_7_0
  OP2 VALUE-04
    COMMENT-
    ADDRESS-3B
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sC
  OP1 VALUE-sC
   OPERAND2-DATA_WB_OUT_15_8
  OP2 VALUE-05
    COMMENT-
    ADDRESS-3C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-3C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ENABLE WB ENABLE
    ADDRESS-3C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-3C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-WB_BUS_WRITE_ENABLE
  OP2 VALUE-02
    COMMENT-
    ADDRESS-3D
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-3E
      LABEL-wishbone_ack
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-3E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-3E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WISHBONE ACK
    ADDRESS-3E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-3E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-ACK_CF_READER
  OP2 VALUE-01
    COMMENT-
    ADDRESS-3F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_WB_OUT
  OP2 VALUE-06
    COMMENT-
    ADDRESS-40
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; null - wait state
    ADDRESS-40
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-40
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-41
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-42
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-43
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-44
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WISHBONE MASTER MUST CHECK ACK SIGNAL
    ADDRESS-44
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IN THE RISING EDGE OF THE CLOCK AND DEASSERT 
    ADDRESS-44
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; STROBE SIGNAL. SLAVE AUTOMATICALLY DEASSERT ACK
    ADDRESS-44
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-44
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-45
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_WB_OUT
  OP2 VALUE-06
    COMMENT-
    ADDRESS-46
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;OUTPUT sF,CONTROL_OUT	
    ADDRESS-46
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-main
  OP1 VALUE-18
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-47
      LABEL-wait_loop
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; SOFTWARE DELAY LOOP
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; TAKES SLOW LOOP VALUE FROM sF
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; TWO CYCLES PER INSTRUCTION
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; SLOW LOOP 3 INSTRUCTIONS * sF
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; FAST LOOP 2 INSTRUCTIONS * DELAY1 
    ADDRESS-47
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 50 MHZ DELAY1=0A => T=20NS => fl=3*20*2= 120ns sF=1 => delay= 120ns
    ADDRESS-47
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-48
      LABEL-slow_loop
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-48
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-DELAY1
  OP2 VALUE-03
    COMMENT-
    ADDRESS-49
      LABEL-fast_loop
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-49
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-4A
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-fast_loop
  OP2 VALUE-49
    COMMENT-
    ADDRESS-4B
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-4C
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-slow_loop
  OP2 VALUE-48
    COMMENT-
    ADDRESS-4D
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-4E
      LABEL-write_ide_register
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-4E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-4E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; TAKE ADDRESS FROM SF REGISTER AND IT'S PUT INTO THE PORT
    ADDRESS-4E
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-4E
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_ADDRESS_OUT
  OP2 VALUE-03
    COMMENT-
    ADDRESS-4F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-4F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA OUT IDE
    ADDRESS-4F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-4F
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-DATA_IDE_OUT_7_0
  OP2 VALUE-00
    COMMENT-
    ADDRESS-50
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sE
  OP1 VALUE-sE
   OPERAND2-DATA_IDE_OUT_15_8
  OP2 VALUE-01
    COMMENT-
    ADDRESS-51
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-51
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA OUT BUS ENABLE
    ADDRESS-51
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-51
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_BUS_WRITE_ENABLE
  OP2 VALUE-01
    COMMENT-
    ADDRESS-52
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-53
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-53
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 70 NS (MIN)
    ADDRESS-53
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (120ns/50Mhz)
    ADDRESS-53
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-54
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-55
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-55
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WRITE STROBE ON
    ADDRESS-55
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-55
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-NIOWR
  OP2 VALUE-FD
    COMMENT-
    ADDRESS-56
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_CONTROL_OUT
  OP2 VALUE-02
    COMMENT-
    ADDRESS-57
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-57
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 165NS (MIN)
    ADDRESS-57
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (240ns/50Mhz)
    ADDRESS-57
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 020503
    ADDRESS-57
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-58
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-59
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-59
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WRITE STROBE OFF
    ADDRESS-59
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-59
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-5A
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_CONTROL_OUT
  OP2 VALUE-02
    COMMENT-
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 20NS (MIN)
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (410ns/50Mhz)
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 020503
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LOAD sF,01
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;CALL wait_loop
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CE AND ADRESSES OFF
    ADDRESS-5B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CF_OFF
  OP2 VALUE-18
    COMMENT-
    ADDRESS-5C
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_ADDRESS_OUT
  OP2 VALUE-03
    COMMENT-
    ADDRESS-5D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 30NS (MIN) (if delay of the two previos inst>30ns this is not necessary)
    ADDRESS-5D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (put again 020503)
    ADDRESS-5D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-5E
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-5F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA OUT BUS DISABLE
    ADDRESS-5F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-5F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-60
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-61
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-61
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (put again 020503)
    ADDRESS-61
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-62
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-63
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-64
      LABEL-read_ide_register
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-64
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-64
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; TAKE ADDRESS FROM SF REGISTER AND IT'S PUT INTO THE PORT
    ADDRESS-64
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-64
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_ADDRESS_OUT
  OP2 VALUE-03
    COMMENT-
    ADDRESS-65
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-65
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 70 NS (MIN)
    ADDRESS-65
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-65
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-66
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-67
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-67
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; READ STROBE ON
    ADDRESS-67
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; reset control_out (140503)
    ADDRESS-67
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-68
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-69
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-NIORD
  OP2 VALUE-FE
    COMMENT-
    ADDRESS-6A
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_CONTROL_OUT
  OP2 VALUE-02
    COMMENT-
    ADDRESS-6B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-6B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 165NS (MIN)
    ADDRESS-6B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-6B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-02
  OP2 VALUE-02
    COMMENT-
    ADDRESS-6C
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-6D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-6D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; TAKE DE DATA FROM IDE BUS
    ADDRESS-6D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-6D
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-sB
  OP1 VALUE-sB
   OPERAND2-DATA_IDE_IN_7_0
  OP2 VALUE-00
    COMMENT-
    ADDRESS-6E
      LABEL-
INSTRUCTION-INPUT
   OPERAND1-sC
  OP1 VALUE-sC
   OPERAND2-DATA_IDE_IN_15_8
  OP2 VALUE-01
    COMMENT-
    ADDRESS-6F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-6F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; READ STROBE OFF
    ADDRESS-6F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-6F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-70
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_CONTROL_OUT
  OP2 VALUE-02
    COMMENT-
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 20NS (MIN)
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LOAD sF,01
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;CALL wait_loop
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CE AND ADRESSES OFF
    ADDRESS-71
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-71
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CF_OFF
  OP2 VALUE-18
    COMMENT-
    ADDRESS-72
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-IDE_ADDRESS_OUT
  OP2 VALUE-03
    COMMENT-
    ADDRESS-73
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-73
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WAIT FOR 20NS (MIN)
    ADDRESS-73
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; (120ns/50mhz)
    ADDRESS-73
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LOAD sF,01
    ADDRESS-73
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;CALL wait_loop
    ADDRESS-73
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-74
      LABEL-read_sector
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; WRITE ATA COMMANDS TO THE CF
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE FEATURE REGISTER
    ADDRESS-74
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-74
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-WRITE_SEC_FEATURE
  OP2 VALUE-00
    COMMENT-
    ADDRESS-75
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FEATURE
  OP2 VALUE-11
    COMMENT-
    ADDRESS-76
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-77
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-77
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE SECTOR COUNT REGISTER
    ADDRESS-77
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-77
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-78
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-SECTOR_COUNT
  OP2 VALUE-12
    COMMENT-
    ADDRESS-79
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-7A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-7A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE LBA_7_0
    ADDRESS-7A
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-7A
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-s7
  OP2 VALUE-s7
    COMMENT-
    ADDRESS-7B
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-LBA_7_0
  OP2 VALUE-13
    COMMENT-
    ADDRESS-7C
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-7D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-7D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE LBA_15_8
    ADDRESS-7D
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-7D
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-s8
  OP2 VALUE-s8
    COMMENT-
    ADDRESS-7E
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-LBA_15_8
  OP2 VALUE-14
    COMMENT-
    ADDRESS-7F
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-80
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-80
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE LBA_23_16
    ADDRESS-80
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-80
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-s9
  OP2 VALUE-s9
    COMMENT-
    ADDRESS-81
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-LBA_23_16
  OP2 VALUE-15
    COMMENT-
    ADDRESS-82
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE LD_LBA_27_24
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;	
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; LBA_27_42 OR WITH 1110
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;			BIT7 : 1
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;			BIT6 : LBA=1
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;			BIT5 : 1
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;			BIT4 : DRV=0
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-83
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-83
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sA
  OP2 VALUE-sA
    COMMENT-
    ADDRESS-84
      LABEL-
INSTRUCTION-OR
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-E0
  OP2 VALUE-E0
    COMMENT-
    ADDRESS-85
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-86
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-LD_LBA_27_24
  OP2 VALUE-16
    COMMENT-
    ADDRESS-87
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-88
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-88
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IDE READ SECTOR COMMAND
    ADDRESS-88
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-88
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-READ_SECTOR_COMMAND
  OP2 VALUE-20
    COMMENT-
    ADDRESS-89
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-COMMAND
  OP2 VALUE-17
    COMMENT-
    ADDRESS-8A
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-8B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-8B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; PUT SECTOR ALLOWED FLAG INTO MY_STATUS
    ADDRESS-8B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-8B
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 290103 Added data available check
    ADDRESS-8B
      LABEL-retry_status_check
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-8B
      LABEL-
INSTRUCTION-CALL
   OPERAND1-cf_status_check
  OP1 VALUE-B8
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-8C
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-8D
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-ERROR_MY_STATUS
  OP2 VALUE-08
    COMMENT-
    ADDRESS-8E
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-8F
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_TRANSFER_ALLOWED
  OP2 VALUE-04
    COMMENT-
    ADDRESS-90
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-91
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; LOOPS UNTIL SECTOR DATA IS AVAILABLE
    ADDRESS-91
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-retry_status_check
  OP2 VALUE-8B
    COMMENT-
    ADDRESS-92
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-SECTOR_AVAILABLE
  OP2 VALUE-01
    COMMENT-
    ADDRESS-93
      LABEL-
INSTRUCTION-OR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-94
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-94
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; RESET WORDS READ REGISTER
    ADDRESS-94
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-94
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-95
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-96
      LABEL-read_word_from_cf
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-96
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-96
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CHECK IF THE SECTOR IS AVAILABLE
    ADDRESS-96
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-96
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-SECTOR_AVAILABLE
  OP2 VALUE-01
    COMMENT-
    ADDRESS-97
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-98
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-98
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IF SECTOR_AVAILABLE=0 JUMP TO READ_NEW_SECTOR
    ADDRESS-98
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-98
      LABEL-
INSTRUCTION-CALL
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-read_new_sector
  OP2 VALUE-AC
    COMMENT-
    ADDRESS-99
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; check for error
    ADDRESS-99
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-9A
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-ERROR_MY_STATUS
  OP2 VALUE-08
    COMMENT-
    ADDRESS-9B
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;retry_status_check:
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;CALL cf_status_check
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CHECK IF DATA IS AVAILABLE
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 120103 - changed . When there is sector
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; available in the cf ram buffer it is not
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; necessary to check neither bsy or drq
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; only read words with the correct timing paramenters
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;LOAD sF,DATA_TRANSFER_ALLOWED
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;AND sF,s5
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; LOOPS UNTIL SECTOR DATA IS AVAILABLE
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;JUMP Z,retry_status_check
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; end 120103
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IF 256 WORD READ -> SECTOR AVAILABLE=0
    ADDRESS-9C
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9C
      LABEL-
INSTRUCTION-CALL
   OPERAND1-read_word
  OP1 VALUE-A5
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-9D
      LABEL-
INSTRUCTION-AND
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-s6
  OP2 VALUE-s6
    COMMENT-
    ADDRESS-9E
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-reset_word_READ
  OP2 VALUE-A1
    COMMENT-
    ADDRESS-9F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DECREMENT NUMBER OF WORDS READ
    ADDRESS-9F
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-9F
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-A0
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A1
      LABEL-reset_word_READ
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-A1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; IF 256 WORD READ -> SECTOR AVAILABLE=0
    ADDRESS-A1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-A1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;ADD s7,01
    ADDRESS-A1
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-A2
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FE
  OP2 VALUE-FE
    COMMENT-
    ADDRESS-A3
      LABEL-
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-A4
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A5
      LABEL-read_word
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-A5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; READ WORDS FROM IDE DATA REGISTERS
    ADDRESS-A5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-A5
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA
  OP2 VALUE-10
    COMMENT-
    ADDRESS-A6
      LABEL-
INSTRUCTION-CALL
   OPERAND1-read_ide_register
  OP1 VALUE-64
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-A7
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-A7
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA ARE IN sB , sC
    ADDRESS-A7
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-A7
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA AVAILABLE SIGNAL IS STORED
    ADDRESS-A7
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-TAG0_WORD_AVAILABLE
  OP2 VALUE-02
    COMMENT-
    ADDRESS-A8
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_WB_OUT
  OP2 VALUE-06
    COMMENT-
    ADDRESS-A9
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-AA
      LABEL-dummy_word_read
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-AA
      LABEL-
INSTRUCTION-CALL
   OPERAND1-read_word
  OP1 VALUE-A5
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-AB
      LABEL-
INSTRUCTION-SUB
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-AC
      LABEL-read_new_sector
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-AC
      LABEL-
INSTRUCTION-CALL
   OPERAND1-cf_status_check
  OP1 VALUE-B8
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-AD
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-AE
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_TRANSFER_ALLOWED
  OP2 VALUE-04
    COMMENT-
    ADDRESS-AF
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;loops until previous non READ words are READ
    ADDRESS-AF
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-dummy_word_read
  OP2 VALUE-AA
    COMMENT-
    ADDRESS-B0
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-B1
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-ERROR_MY_STATUS
  OP2 VALUE-08
    COMMENT-
    ADDRESS-B2
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-B3
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-B4
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-COMMAND_ALLOWED
  OP2 VALUE-02
    COMMENT-
    ADDRESS-B5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; loops until commands are allowed
    ADDRESS-B5
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s6
  OP1 VALUE-s6
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-B6
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-read_new_sector
  OP2 VALUE-AC
    COMMENT-
    ADDRESS-B7
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-read_sector
  OP1 VALUE-74
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-B8
      LABEL-cf_status_check
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-B8
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-B8
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CF STATUS REGISTER READ
    ADDRESS-B8
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-B8
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-STATUS
  OP2 VALUE-17
    COMMENT-
    ADDRESS-B9
      LABEL-
INSTRUCTION-CALL
   OPERAND1-read_ide_register
  OP1 VALUE-64
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ERROR 
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 	  BSY/DRDY/DWF/DSC/DRQ/CORR/0/ERR
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; MASK    0    0   0   0   0    0 0   1	
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ERR-ST  X    X   X   X   X    X X   1
    ADDRESS-BA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; AND     0    0   0   0   0    0 0   1
    ADDRESS-BA
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-BB
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sB
  OP2 VALUE-sB
    COMMENT-
    ADDRESS-BC
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-NZ
  OP1 VALUE-NZ
   OPERAND2-put_error_code
  OP2 VALUE-C6
    COMMENT-
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DATA REQUEST MASK (READY=1 : BUSY=0 : DRQ=1) 
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 	  BSY/DRDY/DWF/DSC/DRQ/CORR/0/ERR
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; MASK    1    1   0   0   1    0 0   1	
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DRQ-ST  0    1   X   X   1    X X   0
    ADDRESS-BD
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; AND     0    1   0   0   1    0 0   0
    ADDRESS-BD
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-C9
  OP2 VALUE-C9
    COMMENT-
    ADDRESS-BE
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sB
  OP2 VALUE-sB
    COMMENT-
    ADDRESS-BF
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-48
  OP2 VALUE-48
    COMMENT-
    ADDRESS-C0
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-put_data_request_allowed
  OP2 VALUE-DA
    COMMENT-
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; COMMAND ALLOWED MASK (READY=1 : BUSY=0) 
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 	  BSY/DRDY/DWF/DSC/DRQ/CORR/0/ERR
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; MASK    1    1   0   0   0    0 0   1	
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; CMD-ST  0    1   X   X   0    X X   0
    ADDRESS-C1
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; AND     0    1   0   0   0    0 0   0
    ADDRESS-C1
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-C1
  OP2 VALUE-C1
    COMMENT-
    ADDRESS-C2
      LABEL-
INSTRUCTION-AND
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-sB
  OP2 VALUE-sB
    COMMENT-
    ADDRESS-C3
      LABEL-
INSTRUCTION-SUB
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-40
  OP2 VALUE-40
    COMMENT-
    ADDRESS-C4
      LABEL-
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-put_command_allowed
  OP2 VALUE-DE
    COMMENT-
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ELSE DATA_TRANSFER_ALLOWED & COMMAND_ALLOWED => 0
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;JUMP put_error_code
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; REVISAR ???
    ADDRESS-C5
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;AND s5,01
    ADDRESS-C5
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-C6
      LABEL-put_error_code
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-C6
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; 
    ADDRESS-C6
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; ERROR SIGNAL
    ADDRESS-C6
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C6
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; PUT ERROR CODE
    ADDRESS-C6
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-C6
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-04
  OP2 VALUE-04
    COMMENT-
    ADDRESS-C7
      LABEL-
INSTRUCTION-OUTPUT
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL_OUT
  OP2 VALUE-07
    COMMENT-
    ADDRESS-C8
      LABEL-
INSTRUCTION-CALL
   OPERAND1-soft_reset
  OP1 VALUE-CB
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-C9
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-ERROR_MY_STATUS
  OP2 VALUE-08
    COMMENT-
    ADDRESS-CA
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-CB
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;JUMP inicialization (STACK OVERFLOW???)
    ADDRESS-CB
      LABEL-soft_reset
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-CB
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-SOFT_RESET
  OP2 VALUE-04
    COMMENT-
    ADDRESS-CC
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL
  OP2 VALUE-0E
    COMMENT-
    ADDRESS-CD
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-CE
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-CF
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-D0
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-D1
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-D2
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-D3
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-D4
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-FF
  OP2 VALUE-FF
    COMMENT-
    ADDRESS-D5
      LABEL-
INSTRUCTION-CALL
   OPERAND1-wait_loop
  OP1 VALUE-47
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-D6
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sD
  OP1 VALUE-sD
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-D7
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-CONTROL
  OP2 VALUE-0E
    COMMENT-
    ADDRESS-D8
      LABEL-
INSTRUCTION-CALL
   OPERAND1-write_ide_register
  OP1 VALUE-4E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-D9
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-DA
      LABEL-put_data_request_allowed
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-DA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-DA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DRQ ALLOW -> MY STATUS REGISTER
    ADDRESS-DA
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-DA
      LABEL-
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-FD
  OP2 VALUE-FD
    COMMENT-
    ADDRESS-DB
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-DATA_TRANSFER_ALLOWED
  OP2 VALUE-04
    COMMENT-
    ADDRESS-DC
      LABEL-
INSTRUCTION-OR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-DD
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-DE
      LABEL-put_command_allowed
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-DE
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-DE
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; DRQ ALLOW -> MY STATUS REGISTER
    ADDRESS-DE
      LABEL-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;
    ADDRESS-DE
      LABEL-
INSTRUCTION-AND
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-FB
  OP2 VALUE-FB
    COMMENT-
    ADDRESS-DF
      LABEL-
INSTRUCTION-LOAD
   OPERAND1-sF
  OP1 VALUE-sF
   OPERAND2-COMMAND_ALLOWED
  OP2 VALUE-02
    COMMENT-
    ADDRESS-E0
      LABEL-
INSTRUCTION-OR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-sF
  OP2 VALUE-sF
    COMMENT-
    ADDRESS-E1
      LABEL-
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-FF
      LABEL-
INSTRUCTION-ADDRESS
   OPERAND1-FF
  OP1 VALUE-FF
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-FF
      LABEL-interrupt
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-FF
      LABEL-
INSTRUCTION-RETURNI
   OPERAND1-ENABLE
  OP1 VALUE-ENABLE
   OPERAND2-
  OP2 VALUE-
    COMMENT-
