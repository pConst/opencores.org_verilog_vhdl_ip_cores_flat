LIB1ASMSRC = scarts16/libgcc.S
LIB1ASMFUNCS = \
	_mulhi3 _mulsi3 \
	_divhi3 _divsi3 \
	_udivhi3 _udivsi3 \
	_modhi3 _modsi3 \
	_umodhi3 _umodsi3 \
	_lshrsi3 _lshrdi3 \
	_ashrsi3 _ashrdi3 \
	_ashlsi3 _ashldi3 \
	_ffshi2 _ffssi2 \
	_ctzhi2 _ctzsi2 \
	_clzhi2 _clzsi2 \
	_popcounthi2 _popcountsi2 \
	_parityhi2 _paritysi2

TARGET_LIBGCC2_CFLAGS = -I$(INST_SCARTS_TOOLCHAIN_NEWLIB_LIBC_INCLUDE_DIR) -Dinhibit_libc -fno-if-conversion -Os

LIB2FUNCS_EXTRA = \
	$(srcdir)/config/scarts16/div.c \
	$(srcdir)/config/scarts16/divdi.c \
	$(srcdir)/config/scarts16/fixfloat.c \
	$(srcdir)/config/scarts16/moddi.c \
	$(srcdir)/config/scarts16/muldi.c \
	$(srcdir)/config/scarts16/udivdi.c \
	$(srcdir)/config/scarts16/umoddi.c

# We want fine grained libraries, so use the new code
# to build the floating point emulation libraries.
FPBIT = fp-bit.c
DPBIT = dp-bit.c

fp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define FLOAT' > fp-bit.c
	echo '#define SMALL_MACHINE' >> fp-bit.c
	echo '#define ROUND_TOWARDS_ZERO 0' >> fp-bit.c
	echo '#define LARGEST_EXPONENT_IS_NORMAL(X) 0' >> fp-bit.c
	cat $(srcdir)/config/fp-bit.c >> fp-bit.c

dp-bit.c: $(srcdir)/config/fp-bit.c
	echo '#define SMALL_MACHINE' > dp-bit.c
	echo '#define ROUND_TOWARDS_ZERO 0' >> dp-bit.c
	echo '#define LARGEST_EXPONENT_IS_NORMAL(X) 0' >> dp-bit.c
	cat $(srcdir)/config/fp-bit.c >> dp-bit.c

# Enable the following if multilibs are needed.
# See gcc/genmultilib, gcc/doc/gcc.texi and gcc/doc/tm.texi
# for a description of the options and their values.
#
# MULTILIB_OPTIONS    = 
# MULTILIB_DIRNAMES   = 
# MULTILIB_MATCHES    =
# MULTILIB_EXCEPTIONS =
# MULTILIB_EXTRA_OPTS = 
#
# LIBGCC = stmp-multilib
# INSTALL_LIBGCC = install-multilib

