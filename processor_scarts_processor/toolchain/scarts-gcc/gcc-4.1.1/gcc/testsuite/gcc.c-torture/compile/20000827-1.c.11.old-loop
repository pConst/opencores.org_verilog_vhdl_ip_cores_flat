
;; Function foo (foo)


Loop from 41 to 42: 6 real insns.
Insn 15: regno 23 (life 9), global savings 1  moved to 45
Insn 16: regno 22 (life 4), savings 4  moved to 46
Insn 18: regno 26 (life 3), consec 1, cond forces 16 savings 3  moved to 47 moved to 48
Insn 20: regno 16 (life 1), cond forces 18 savings 1  moved to 49

Loop from 41 to 42: 1 real insns.
(note 2 0 7 NOTE_INSN_DELETED)

(note 7 2 50 NOTE_INSN_FUNCTION_BEG)

;; Start of basic block 0, registers live: (nil)
(note 50 7 45 0 [bb 0] NOTE_INSN_BASIC_BLOCK)

(insn 45 50 46 0 (set (reg/v:SI 23 [ a ])
        (asm_operands:SI ("") ("=r") 0 []
             [] ("gcc/testsuite/gcc.c-torture/compile/20000827-1.c") 13)) -1 (nil)
    (nil))

(insn 46 45 47 0 (set (reg/v:QI 22 [ b ])
        (asm_operands:QI ("") ("=r") 0 []
             [] ("gcc/testsuite/gcc.c-torture/compile/20000827-1.c") 13)) -1 (nil)
    (nil))

(insn 47 46 48 0 (set (reg:SI 26)
        (ashift:SI (subreg:SI (reg/v:QI 22 [ b ]) 0)
            (const_int 24 [0x18]))) -1 (nil)
    (nil))

(insn 48 47 49 0 (set (reg:SI 26)
        (ashiftrt:SI (reg:SI 26)
            (const_int 24 [0x18]))) -1 (nil)
    (nil))

(insn 49 48 41 0 (set (reg:CC 16 cc)
        (compare:CC (reg:SI 26)
            (const_int 0 [0x0]))) -1 (nil)
    (nil))
;; End of basic block 0, registers live:
 (nil)

(note 41 49 12 NOTE_INSN_LOOP_BEG)

;; Start of basic block 1, registers live: (nil)
(code_label 12 41 13 1 3 "" [1 uses])

(note 13 12 21 1 [bb 1] NOTE_INSN_BASIC_BLOCK)

(jump_insn 21 13 42 1 (set (pc)
        (if_then_else (eq (reg:CC 16 cc)
                (const_int 0 [0x0]))
            (label_ref 12)
            (pc))) -1 (nil)
    (expr_list:REG_BR_PROB (const_int 8900 [0x22c4])
        (nil)))
;; End of basic block 1, registers live:
 (nil)

(note 42 21 27 NOTE_INSN_LOOP_END)

(note 27 42 23 NOTE_INSN_FUNCTION_END)

;; Start of basic block 2, registers live: (nil)
(note 23 27 30 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 30 23 36 2 (set (reg/i:SI 0 r0 [ <result> ])
        (reg/v:SI 23 [ a ])) 13 {*movsi} (nil)
    (nil))

(insn 36 30 0 2 (use (reg/i:SI 0 r0 [ <result> ])) -1 (nil)
    (nil))
;; End of basic block 2, registers live:
 (nil)

