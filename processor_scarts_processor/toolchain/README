Building and Installing the GNU Toolchain for the SCARTS Architecture
---------------------------------------------------------------------

1. Prerequisites
----------------

1.1 Dependencies
----------------
The GNU Toolchain for the SCARTS architecture requires a bunch of packages
to be made available on a host machine prior to its installation. Note that
the following list of dependencies might vary slightly from host to host, but
should be suitable for most default Linux installations:

- gcc-4.1
- libtool
- termcap-devel
- texinfo
- zlib-devel

1.2 Resource Definition Script
------------------------------
Edit the resource file scartsrc in ./scripts and adapt the (top level) paths to
suit your needs. By sourcing the file in the terminal you make the variables in
scartsrc available in the environment:

. ~/scripts/scartsrc (mind the leading dot!)

1.3 PATH Environment Variable
-----------------------------
Edit the file .bashrc within your home folder and add the 'bin' directory of
the GNU Toolchain installation directory to $PATH, e.g. via:

export PATH=$PATH:/opt/scarts/bin

2. Building and Installation
----------------------------
For a fresh installation of the GNU toolchain for the SCARTS architecture you
must follow these steps (in chronological order):

2.1 scarts-memmap
-----------------
The SCARTS memory mapping tool allows for the management of memory mappings,
which depend on both the configured word size of the SCARTS processor and the
selected target platform, from simple configuration files.

The memory mapper automatically creates the dependencies (configuration files,
Makefiles, linker scripts, etc.) for a certain memory map in order that both
the SCARTS and the GNU toolchain may share the same view of the memory.

Although it is recommended to always keep the SCARTS and the GNU toolchain in
synch, only some of the dependencies are mandatory:

- SCARTS VHDL configuration file (scarts_conf.vhd)
- Makefile and linker scripts for the bootloader
- Makefile and linker scripts for applications

The simulator within the GDB, for example, uses a default memory configuration
which should be sufficiently large to suit most applications.

Please refer to the usage of the memory mapping tool for more information!

2.1 scarts-binutils
-------------------
Please see the building instructions in ./scarts-binutils/binutils-2.19.1/BUILD.

2.2 scarts-gcc
--------------
Please see the building instructions in ./scarts-gcc/gcc-4.1.1/BUILD.

2.3 scarts-newlib
-----------------
Please see the building instructions in ./scarts-newlib/newlib-1.17.0/BUILD.

2.4 scarts-hex2quartus
----------------------
Please see the building instructions in ./scarts-hex2quartus/BUILD.

2.5 scarts-bootloader
---------------------
Please see the building instructions in ./scarts-bootloader/BUILD.

2.6 scarts-gdb
--------------
Please see the building instructions in ./scarts-gdb/gdb-6.8/BUILD.

2.7 scarts-gdb-stub
-------------------
Please see the building instructions in ./scarts-gdb-stub/BUILD.

