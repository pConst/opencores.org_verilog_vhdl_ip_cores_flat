<?xml version="1.0" encoding="UTF-8"?>
<!--Created by Kactus 2 document generator 08:42:21 ti syys 27 2011-->
<spirit:abstractionDefinition>
	<spirit:vendor>TUT</spirit:vendor>
	<spirit:library>ip.hwp.interface</spirit:library>
	<spirit:name>udp_ip_tx_16bit.absDef</spirit:name>
	<spirit:version>1.0</spirit:version>
	<spirit:busType spirit:vendor="TUT" spirit:library="ip.hwp.interface" spirit:name="udp_ip_tx_16bit" spirit:version="1.0"/>
	<spirit:ports>
		<spirit:port>
			<spirit:logicalName>fatal_error_out</spirit:logicalName>
			<spirit:description>When high, fatal error in ethernet controller. Application must reset.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>1</spirit:width>
					<spirit:direction>out</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>link_up_out</spirit:logicalName>
			<spirit:description>When high, link is established between the peers and operations are allowed.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>1</spirit:width>
					<spirit:direction>out</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>new_tx_in</spirit:logicalName>
			<spirit:description>Set this high simultaneously with tx_len, target_addr, target_port, source_port, first tx_data and tx_data_valid to initiate a new tx operation. Creating packet headers will take a few dozens clock cycles. Operation is acknowledged when the tx_re is asserted for the first word.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>1</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>no_arp_target_MAC_in</spirit:logicalName>
			<spirit:description>IF you have disabled ARP: Supply the destination MAC addres for TX operations</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>optional</spirit:presence>
					<spirit:width>48</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:defaultValue>0</spirit:defaultValue>
			</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>source_port_in</spirit:logicalName>
			<spirit:description>Source IP port number for a new tx operation.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>16</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>target_addr_in</spirit:logicalName>
			<spirit:description>Destination IP address for a new tx operation</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>32</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>target_port_in</spirit:logicalName>
			<spirit:description>Destination IP port number for a new tx operation</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>16</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>tx_data_in</spirit:logicalName>
			<spirit:description>Data to be sent, one word at a time. The first data must be available when new_tx is asserted.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>16</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>tx_data_valid_in</spirit:logicalName>
			<spirit:description>Set this high simultaneously with the data input.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>1</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>tx_len_in</spirit:logicalName>
			<spirit:description>Length of packet payload for the new tx operation IN BYTES.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>11</spirit:width>
					<spirit:direction>in</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
		<spirit:port>
			<spirit:logicalName>tx_re_out</spirit:logicalName>
			<spirit:description>Acknowledges a read of tx_data. You can update the next word after this.</spirit:description>
			<spirit:wire>
				<spirit:onSlave>
					<spirit:presence>required</spirit:presence>
					<spirit:width>1</spirit:width>
					<spirit:direction>out</spirit:direction>
				</spirit:onSlave>
				<spirit:requiresDriver spirit:driverType="any"/>false</spirit:wire>
		</spirit:port>
	</spirit:ports>
</spirit:abstractionDefinition>
